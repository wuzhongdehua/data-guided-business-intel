install.packages(c("vars", "urca"))
require('vars')
require('urca')
data.path <- "../data/data.csv"
data.csv <- read.csv(data.path)
data.path <- "./data/data.csv"
data.csv <- read.csv(data.path)
data.path <- "../Input Data/data.csv"
data.csv <- read.csv(data.path)
data.path <- "../Input\ Data/data.csv"
data.csv <- read.csv(data.path)
data.path <- "/home/zachncst/classes/csc591/projects/05.Topic-IV.Project-5.Manufacturer-Retailer-Price.CausalRelationDiscovery.distribution/Input Data/data.csv"
data.csv <- read.csv(data.path)
summary(data.csv)
plot(data.csv, nc=2, xlab="")
plot(data.csv, nc=2, xlab="")
plot(data.csv, nc=2)
var.model <- VAR(data.csv, p=1, type="both")
summary(var.model)
var.model$restrictions
var.model$varresult
var.model
residuals(var.model)
var.residuals <- residuals(var.model)
ur.df(var.residuals)
ur.df(var.residuals)
View(var.residuals)
var.model
ur.df(var.residuals$)
ur.df(var.residuals$Move)
ur.df(var.residuals[,1])
ur.df(var.residuals[,2])
ur.df(var.residuals[,0])
var.residuals[,1]
ur.df(var.residuals[,1])
ur.df(var.residuals[,2])
ur.df(var.residuals[,0])
ur.df(var.residuals[,1])
ur.df(var.residuals[,2])
ks.test(var.residuals, "Move", p.value=0.05)
suffStat=list(C=cor(data), n=1000)
data <- read.csv(data.path)
plot(data, nc=2)
var.model <- VAR(data, p=1, type="both")
summary(var.model)
var.model
var.residuals <- residuals(var.model)
ur.df(var.residuals[,0])
ur.df(var.residuals[,1])
ur.df(var.residuals[,2])
ks.test(var.residuals, "Move", p.value=0.05)
data <- var.residuals
suffStat=list(C=cor(data), n=1000)
pc_fit <- pc(suffStat, indepTest=gaussCItest, alpha=0.05, labels=colnames(data), skel.method="original")
plot(pc_fit, main="PC Output")
# LiNGAM algorithm
library('pcalg')
install.packages("pcalg")
data <- var.residuals
suffStat=list(C=cor(data), n=1000)
pc_fit <- pc(suffStat, indepTest=gaussCItest, alpha=0.05, labels=colnames(data), skel.method="original")
plot(pc_fit, main="PC Output")
library('pcalg')
source("https://bioconductor.org/biocLite.R")
biocLite("RBGL")
library('pcalg')
biocLint('pcalg')
biocLite('pcalg')
library('pcalg')
data <- var.residuals
suffStat=list(C=cor(data), n=1000)
pc_fit <- pc(suffStat, indepTest=gaussCItest, alpha=0.05, labels=colnames(data), skel.method="original")
plot(pc_fit, main="PC Output")
biocLite("Rgraphviz")
lingam_fit <- LINGAM(data)
show(lingam_fit)
data <- var.residuals
suffStat=list(C=cor(data), n=1000)
pc_fit <- pc(suffStat, indepTest=gaussCItest, alpha=0.05, labels=colnames(data), skel.method="original")
plot(pc_fit, main="PC Output")
lingam_fit <- LINGAM(data)
show(lingam_fit)
plot(pc_fit, main="PC Output")
show(lingam_fit)
plot(lingam_fit)
plot(lingam_fit, main="Lingam")
show(pc_fit)
show(lingam_fit)
lingam_fit <- LINGAM(data.csv)
show(lingam_fit)
plot(lingam_fit, main="Lingam")
lingam_fit <- LINGAM(data)
show(lingam_fit)
plot(pc_fit, main="PC Output")
show(lingam_fit$Adj)
iplotPC(lingam_fit)
iplotPC(lingam_fit)
plot(lingam_fit$B, main="Lingam")
plot(lingam_fit$Adj, main="Lingam")
pc_fit
lingam_fit
lingam_fit <- LINGAM(data)
data <- var.residuals
lingam_fit <- LINGAM(data)
lingam_fit
var.model <- VAR(data.csv, p=1, type="both", lag.max=10)
summary(var.model)
var.model
var.residuals <- residuals(var.model)
data <- var.residuals
suffStat=list(C=cor(data), n=1000)
pc_fit <- pc(suffStat, indepTest=gaussCItest, alpha=0.05, labels=colnames(data), skel.method="original")
pc_fit
plot(pc_fit, main="PC Output")
# LiNGAM algorithm
lingam_fit <- LINGAM(data)
lingam_fit
show(lingam_fit)
iplotPC(lingam_fit)
plot(lingam_fit$Adj, main="Lingam")
show(lingam_fit)
ks.test(var.residuals, "Move", p.value=0.05)
ur.df(var.residuals[,0])
ur.df(var.residuals[,1])
ur.df(var.residuals[,2])
ur.df(var.residuals[,1])
ur.df(var.residuals[,2])
ur.df(var.residuals[,3])
summary(var.model)
var.model
View(var.residuals)
View(var.residuals)
ks.test(var.residuals[,1], var.residuals[,2], "Move", p.value=0.05)
ks.test(var.residuals[,1], var.residuals[,3], "Move", p.value=0.05)
var.residuals[,2]
var.residuals$RPRICE
ks.test(var.residuals[,1], var.residuals[,2], "Move", p.value=0.05)
ks.test(var.residuals[,1], var.residuals[,3], "Move", p.value=0.05)
ks.test(var.residuals[,1], var.residuals[,2], "Move", p.value=0.05)
ks.test(var.residuals[,1], var.residuals[,3], "Move", p.value=0.05)
ks.test(var.residuals[,1],  "Move", p.value=0.05)
ks.test(var.residuals[,2], var.residuals[,1], "Move", p.value=0.05)
ks.test(var.residuals[,3], var.residuals[,1], "Move", p.value=0.05)
var.residuals[,2]
var.reisduals[,3]
var.residuals[,3]
var.data <- cbind(data.csv[,1], data.csv[,2], data.csv[,3])
plot(var.data, nc=2)
var.data
var.model <- VAR(var.data, p=1, type="both", lag.max=10)
summary(data.csv)
colnames(var.data) <- cbind("Move", "RPRICE", "MPRICE")
var.model <- VAR(var.data, p=1, type="both", lag.max=10)
summary(var.model)
var.model
plot(var.model)
var.residuals
var.model <- VAR(data.csv, p=1, type="both", lag.max=10)
summary(var.model)
var.data <- cbind(data.csv[,1], data.csv[,2], data.csv[,3])
colnames(var.data) <- cbind("Move", "RPRICE", "MPRICE")
var.model <- VAR(var.data, p=1, type="both", lag.max=10)
summary(var.model)
data.path <- "/home/zachncst/classes/csc591/projects/05.Topic-IV.Project-5.Manufacturer-Retailer-Price.CausalRelationDiscovery.distribution/Input Data/data.csv"
data.csv <- read.csv(data.path)
summary(data.csv)
var.model <- VAR(data.csv, p=1, type="both", lag.max=10)
summary(var.model)
var.model
plot(var.model)
var.model <- VAR(var.data, p=1, type="both", lag.max=10)
summary(var.model)
var.model
plot(var.model)
var.model
plot(var.model)
ur.df(var.residuals[,1])
ur.df(var.residuals[,2])
ur.df(var.residuals[,3])
ur.df(var.residuals)
var.model <- VAR(data.path, p=1, type="const", lag.max=10)
summary(var.model)
var.model
plot(var.model)
ur.df(var.residuals[,3])
ur.df(var.residuals[,1])
ur.df(var.residuals[,2])
ur.df(var.residuals[,3])
dickey1 <- ur.df(var.residuals[,1])
dickey2 <- ur.df(var.residuals[,2])
dickey3 <- ur.df(var.residuals[,3])
summary(dickey1)
summary(dickey3)
dickey1 <- ur.df(y=var.residuals[,1])
var.residuals
summary(dickey1)
summary(dickey2)
summary(dickey3)
summary(dickey2)
summary(dickey1)
summary(dickey3)
dickey1 <- ur.df(var.residuals[,1], lags=2)
dickey2 <- ur.df(var.residuals[,2], lags=2)
dickey3 <- ur.df(var.residuals[,3], lags=2)
summary(dickey1)
summary(dickey2)
summary(dickey3)
summary(dickey1)
summary(dickey2)
summary(dickey3)
data <- var.residuals
suffStat=list(C=cor(data), n=1000)
pc_fit <- pc(suffStat, indepTest=gaussCItest, alpha=0.05, labels=colnames(data), skel.method="original")
pc_fit
plot(pc_fit, main="PC Output")
data.path <- "/home/zachncst/classes/csc591/projects/05.Topic-IV.Project-5.Manufacturer-Retailer-Price.CausalRelationDiscovery.distribution/Input Data/data.csv"
data.csv <- read.csv(data.path)
summary(data.csv)
# Build a VAR model
var.model <- VAR(data.path, p=1, type="const", lag.max=10)
summary(var.model)
var.model
plot(var.model)
var.residuals
dickey1 <- ur.df(var.residuals[,1], lags=2)
dickey2 <- ur.df(var.residuals[,2], lags=2)
dickey3 <- ur.df(var.residuals[,3], lags=2)
summary(dickey1)
summary(dickey2)
summary(dickey3)
ks.test(var.residuals[,2], var.residuals[,1], "Move", p.value=0.05)
ks.test(var.residuals[,3], var.residuals[,1], "Move", p.value=0.05)
ks.test(var.residuals[,1], var.residuals[,2], "Move", p.value=0.05)
ks.test(var.residuals[,1], var.residuals[,3], "Move", p.value=0.05)
data <- var.residuals
suffStat=list(C=cor(data), n=1000)
pc_fit <- pc(suffStat, indepTest=gaussCItest, alpha=0.05, labels=colnames(data), skel.method="original")
pc_fit
plot(pc_fit, main="PC Output")
lingam_fit <- LINGAM(data)
show(lingam_fit)
iplotPC(lingam_fit)
plot(lingam_fit$Adj, main="Lingam")
iplotPC(lingam_fit)
show(lingam_fit)
write( var.residuals, file = "./residuals.txt")
write.csv(var.residuals, file = "./residuals.txt")
write.csv(var.residuals, file = "./residuals.csv")
var.residuals
write.csv(var.residuals, file = "./residuals.csv", row.names = F)
var.model <- VAR(data.csv, p=1, type="const", lag.max=10)
summary(var.model)
var.model
plot(var.model)
var.residuals
# Check for stationarity using the Augmented Dickey-Fuller test
dickey1 <- ur.df(var.residuals[,1], lags=2)
dickey2 <- ur.df(var.residuals[,2], lags=2)
dickey3 <- ur.df(var.residuals[,3], lags=2)
summary(dickey1)
summary(dickey2)
summary(dickey3)
#All values are less than the creitical value -1.95 at 5 percent (0.05)
# Check whether the variables follow a Gaussian distribution
ks.test(var.residuals[,2], var.residuals[,1], "Move", p.value=0.05)
ks.test(var.residuals[,3], var.residuals[,1], "Move", p.value=0.05)
ks.test(var.residuals[,1], var.residuals[,2], "Move", p.value=0.05)
ks.test(var.residuals[,1], var.residuals[,3], "Move", p.value=0.05)
# all equal D = 0.62551, p-value < 2.2e-16
write.csv(var.residuals, file = "./residuals.csv", row.names = F)
# Write the residuals to a csv file to build causal graphs using Tetrad software
summary(var.model)
var.model <- VAR(data.csv, p=1, type="const")
summary(var.model)
var.model <- VAR(data.csv, p=1, type="const")
summary(var.model)
var.model
plot(var.model)
var.residuals <- residuals(var.model)
var.residuals
dickey1 <- ur.df(var.residuals[,1], lags=2)
dickey2 <- ur.df(var.residuals[,2], lags=2)
dickey3 <- ur.df(var.residuals[,3], lags=2)
summary(dickey1)
summary(dickey2)
summary(dickey3)
#All values are less than the creitical value -1.95 at 5 percent (0.05)
# Check whether the variables follow a Gaussian distribution
ks.test(var.residuals[,2], var.residuals[,1], "Move", p.value=0.05)
ks.test(var.residuals[,3], var.residuals[,1], "Move", p.value=0.05)
ks.test(var.residuals[,1], var.residuals[,2], "Move", p.value=0.05)
ks.test(var.residuals[,1], var.residuals[,3], "Move", p.value=0.05)
# all equal D = 0.62551, p-value < 2.2e-16
write.csv(var.residuals, file = "./residuals.csv", row.names = F)
var.model <- VAR(data.csv, p=1, type="const", ic="Schwartz")
summary(var.model)
var.model
plot(var.model)
dickey1 <- ur.df(var.residuals[,1], lags=2)
dickey2 <- ur.df(var.residuals[,2], lags=2)
dickey3 <- ur.df(var.residuals[,3], lags=2)
summary(dickey1)
summary(dickey2)
summary(dickey3)
#All values are less than the creitical value -1.95 at 5 percent (0.05)
write.csv(var.residuals, file = "./residuals.csv", row.names = F)
ks.test(var.residuals[,2], var.residuals[,1], "Move", p.value=0.05)
ks.test(var.residuals[,3], var.residuals[,1], "Move", p.value=0.05)
ks.test(var.residuals[,1], var.residuals[,2], "Move", p.value=0.05)
ks.test(var.residuals[,1], var.residuals[,3], "Move", p.value=0.05)
ks.test(var.residuals[,2], var.residuals[,1], "Move", p.value=0.05)
ks.test(var.residuals[,3], var.residuals[,1], "Move", p.value=0.05)
ks.test(var.residuals[,1], var.residuals[,2], "Move", p.value=0.05)
ks.test(var.residuals[,1], var.residuals[,3], "Move", p.value=0.05)
ks1 <- ks.test(var.residuals[,2], var.residuals[,1], "Move", p.value=0.05)
ks2 <- ks.test(var.residuals[,3], var.residuals[,1], "Move", p.value=0.05)
ks3 <- ks.test(var.residuals[,1], var.residuals[,2], "Move", p.value=0.05)
ks4 <- ks.test(var.residuals[,1], var.residuals[,3], "Move", p.value=0.05)
summary(ks1)
ks1
x <- rnorm(len(var.redisuals))
x <- rnorm(length(var.redisuals))
x <- rnorm(length(var.residuals))
ks.test(x, var.residuals[,1], "Move", p.value=0.05)
ks.test(x, var.residuals[,2], "Move", p.value=0.05)
ks.test(x, var.residuals[,3], "Move", p.value=0.05)
var.residuals
summary(move_dickey)
summary(rprice_dickey)
summary(mprice_dickey)
move_dickey <- ur.df(var.residuals[,1], lags=2)
rprice_dickey <- ur.df(var.residuals[,2], lags=2)
mprice_dickey <- ur.df(var.residuals[,3], lags=2)
summary(move_dickey)
summary(rprice_dickey)
summary(mprice_dickey)
move_test <- ks.test(x, var.residuals[,1], p.value=0.05)
rprice_kstest <- ks.test(x, var.residuals[,2], p.value=0.05)
mprice_kstest <- ks.test(x, var.residuals[,3], p.value=0.05)
move_test
rprice_kstest$p.value
move_test$p.value # normal distribution
move_test$p.value # normal distribution
rprice_kstest$p.value
move_test$p.value
rprice_kstest$p.value
mprice_kstest$statistic
move_test
move_test$p.value
move_test$p.value < 0.05
rprice_kstest$p.value < 0.05
mprice_kstest$statistic < 0.05
mprice_kstest$p.value < 0.05
move_test
rprice_kstest
mprice_kstest
rprice_kstest
move_test
move_test <- ks.test(var.residuals[,1], x, p.value=0.05)
rprice_kstest <- ks.test(var.residuals[,2], x, p.value=0.05)
mprice_kstest <- ks.test(var.residuals[,3], x, p.value=0.05)
move_test
rprice_kstest
mprice_kstest
move_test$p.value < 0.05
rprice_kstest$p.value < 0.05
mprice_kstest$p.value < 0.05
summary(move_dickey)
summary(rprice_dickey)
summary(mprice_dickey)
move_test
plot(move_test)
mprice_kstest
length(var.residuals)
library('dgof')
install.packages("dgof")
move_test <- ks.test(var.residuals[,1], x, p.value=0.05)
move_test
library('dgof')
move_test <- ks.test(var.residuals[,1], x, p.value=0.05)
move_test
library('vars')
library('urca')
library('pcalg')
library('dgof')
require(dgof)
move_test <- ks.test(var.residuals[,1], x, p.value=0.05)
move_test
move_test <- dgof::ks.test(var.residuals[,1], x, p.value=0.05)
move_test
move_test <- dgof::ks.test(var.residuals[,1], x, p.value=0.05)
rprice_kstest <- ks.test(var.residuals[,2], x, p.value=0.05)
mprice_kstest <- ks.test(var.residuals[,3], x, p.value=0.05)
move_test
move_test$alternative
move_test$data.name
move_test$statistic
move_test <- dgof::ks.test(var.residuals[,1], x)
move_test
move_test
rprice_kstest
mprice_kstest
move_test$p.value < 0.05
rprice_kstest$p.value < 0.05
mprice_kstest$p.value < 0.05
summary(move_dickey)
summary(rprice_dickey)
summary(mprice_dickey)
move_dickey <- ur.df(var.residuals[,1])
summary(move_dickey)
rprice_dickey <- ur.df(var.residuals[,2])
summary(rprice_dickey)
mprice_dickey <- ur.df(var.residuals[,3])
summary(mprice_dickey)
